{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/mapreacdt/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Map from \"google-maps-react/src/index.js\"; //import Map from \"./Map\";\n\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  } //call the api when this component mounts\n\n\n  // if a user clicks redo search in this area, call set state]\n  // which will re render everything\n  // how to create event listeners for a component\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (//getting a reference to a google object\n      React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        },\n        className: \"map\",\n        zoom: 14,\n        onClick: this.onMapClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        title: \"The marker`s title will appear as a tooltip.\",\n        name: \"SOMA\",\n        position: {\n          lat: 37.778519,\n          lng: -122.40564\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: \"Dolores park\",\n        position: {\n          lat: 37.759703,\n          lng: -122.428093\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.selectedPlace.name))))\n    );\n  }\n\n} //Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n/*\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={\"current Location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n*/","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/App.js"],"names":["React","ReactDOM","GoogleApiWrapper","InfoWindow","Marker","Map","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","state","render","google","width","height","position","lat","lng","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,MAAvC,QAAqD,mBAArD;AACA,OAAOC,GAAP,MAAgB,gCAAhB,C,CACA;;AAEA,OAAO,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAChDC,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;;AADiB,SAWnBC,aAXmB,GAWH,CAACD,KAAD,EAAQE,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEL,KADH;AAEZM,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAZiB;;AAAA,SAkBnBC,YAlBmB,GAkBJR,KAAK,IAAI;AACtB,UAAI,KAAKS,KAAL,CAAWF,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAzBkB;;AAGjB,SAAKG,KAAL,GAAa;AACXF,MAAAA,iBAAiB,EAAE,KADR;AAEXD,MAAAA,YAAY,EAAE,EAFH;AAGXD,MAAAA,aAAa,EAAE;AAHJ,KAAb;AAKD,GAT+C,CAUhD;;;AAkBA;AACA;AACA;AACAK,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AACA,0BAAC,GAAD;AACE,QAAA,2BAA2B,MAD7B;AAEE,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWW,MAFrB;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,MAAzB;AAAiCC,UAAAA,QAAQ,EAAE;AAA3C,SAHT;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,IAAI,EAAE,EALR;AAME,QAAA,OAAO,EAAE,KAAKN,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKP,aADhB;AAEE,QAAA,KAAK,EAAE,8CAFT;AAGE,QAAA,IAAI,EAAE,MAHR;AAIE,QAAA,QAAQ,EAAE;AAAEc,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAeE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKf,aADhB;AAEE,QAAA,IAAI,EAAE,cAFR;AAGE,QAAA,QAAQ,EAAE;AAAEc,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAoBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAqBE,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWH,YADrB;AAEE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,iBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKE,KAAL,CAAWJ,aAAX,CAAyBY,IAA9B,CADF,CAJF,CArBF;AAFF;AAiCD;;AAlE+C,C,CAqElD;AACA;;AACA,eAAexB,gBAAgB,CAAC;AAC9ByB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZrB,YAFY,CAAf;AAIA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Map from \"google-maps-react/src/index.js\";\n//import Map from \"./Map\";\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n  //call the api when this component mounts\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onMapClicked = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  // if a user clicks redo search in this area, call set state]\n  // which will re render everything\n  // how to create event listeners for a component\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (\n      //getting a reference to a google object\n      <Map\n        centerAroundCurrentLocation\n        google={this.props.google}\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        className={\"map\"}\n        zoom={14}\n        onClick={this.onMapClicked}\n      >\n        <Marker\n          onClick={this.onMarkerClick}\n          title={\"The marker`s title will appear as a tooltip.\"}\n          name={\"SOMA\"}\n          position={{ lat: 37.778519, lng: -122.40564 }}\n        />\n\n        <Marker\n          onClick={this.onMarkerClick}\n          name={\"Dolores park\"}\n          position={{ lat: 37.759703, lng: -122.428093 }}\n        />\n        <Marker />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n        >\n          <div>\n            <h1>{this.state.selectedPlace.name}</h1>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\n//Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n\n/*\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={\"current Location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n*/\n"]},"metadata":{},"sourceType":"module"}