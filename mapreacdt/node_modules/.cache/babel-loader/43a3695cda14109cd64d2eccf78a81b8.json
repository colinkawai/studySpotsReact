{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/studySpotsReact/mapreacdt/src/components/ViewList.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { render } from \"@testing-library/react\";\nimport \"../App.css\";\nimport ReviewModal from \"./ReviewModal\";\nimport WriteReviewModal from \"./WriteReviewModal\";\nimport axios from \"axios\";\nexport class ViewList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.putDataToDB = (rateSeating, rateComfort, rateIspeed, rateNoise, rateOutlet, placeIDWrite) => {\n      axios.post(\"http://localhost:3001/api/putData\", {\n        placeID: placeIDWrite,\n        seatRating: rateSeating,\n        comfortRating: rateComfort,\n        noiseRating: rateNoise,\n        internetRating: rateIspeed,\n        outletRating: rateOutlet\n      });\n    };\n\n    this.state = {\n      elements: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.names !== prevProps.names) {\n      this.createList();\n    }\n  }\n\n  componentDidMount() {\n    this.createList();\n  }\n\n  createList() {\n    const names = this.props.names;\n    const addresses = this.props.addresses;\n    const ratings = this.props.ratings;\n    const placeID = this.props.placeID;\n    const newArray = [];\n\n    for (var i = 0; i < names.length; i++) {\n      newArray.push(React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, names[i]), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, addresses[i]), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" Yelp rating: \", ratings[i], \"/5\"), React.createElement(ReviewModal, {\n        names: names[i],\n        ratings: ratings[i],\n        showReviews: this.showReviews,\n        placeID: placeID[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(WriteReviewModal, {\n        names: names[i],\n        putData: this.putDataToDB,\n        placeID: placeID[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n\n    this.setState({\n      elements: newArray\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" Study Spots \"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.elements));\n  }\n\n}\nexport default ViewList;","map":{"version":3,"sources":["/Users/colinkawai/studySpotsReact/mapreacdt/src/components/ViewList.js"],"names":["React","Component","ReactDOM","render","ReviewModal","WriteReviewModal","axios","ViewList","constructor","props","putDataToDB","rateSeating","rateComfort","rateIspeed","rateNoise","rateOutlet","placeIDWrite","post","placeID","seatRating","comfortRating","noiseRating","internetRating","outletRating","state","elements","componentDidUpdate","prevProps","names","createList","componentDidMount","addresses","ratings","newArray","i","length","push","showReviews","setState","className","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { render } from \"@testing-library/react\";\nimport \"../App.css\";\nimport ReviewModal from \"./ReviewModal\";\nimport WriteReviewModal from \"./WriteReviewModal\";\nimport axios from \"axios\";\n\nexport class ViewList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      elements: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.names !== prevProps.names) {\n      this.createList();\n    }\n  }\n\n  componentDidMount() {\n    this.createList();\n  }\n\n  putDataToDB = (\n    rateSeating,\n    rateComfort,\n    rateIspeed,\n    rateNoise,\n    rateOutlet,\n    placeIDWrite\n  ) => {\n    axios.post(\"http://localhost:3001/api/putData\", {\n      placeID: placeIDWrite,\n      seatRating: rateSeating,\n      comfortRating: rateComfort,\n      noiseRating: rateNoise,\n      internetRating: rateIspeed,\n      outletRating: rateOutlet\n    });\n  };\n\n  createList() {\n    const names = this.props.names;\n    const addresses = this.props.addresses;\n    const ratings = this.props.ratings;\n    const placeID = this.props.placeID;\n    const newArray = [];\n\n    for (var i = 0; i < names.length; i++) {\n      newArray.push(\n        <li>\n          <div>{names[i]}</div>\n\n          <div>{addresses[i]}</div>\n          <div> Yelp rating: {ratings[i]}/5</div>\n          <ReviewModal\n            names={names[i]}\n            ratings={ratings[i]}\n            showReviews={this.showReviews}\n            placeID={placeID[i]}\n          />\n          <br />\n          <WriteReviewModal\n            names={names[i]}\n            putData={this.putDataToDB}\n            placeID={placeID[i]}\n          />\n          <br />\n        </li>\n      );\n    }\n    this.setState({ elements: newArray });\n  }\n\n  render() {\n    return (\n      <div className={this.props.className} id={this.props.id}>\n        <h1> Study Spots </h1>\n        <ol>{this.state.elements}</ol>\n      </div>\n    );\n  }\n}\nexport default ViewList;\n"]},"metadata":{},"sourceType":"module"}