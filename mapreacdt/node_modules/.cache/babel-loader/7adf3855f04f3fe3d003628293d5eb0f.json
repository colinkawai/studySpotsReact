{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/mapreacdt/src/App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM, { findDOMNode } from \"react-dom\";\nimport { GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport MapContainer from \"./components/MapContainer\";\nimport axios from \"axios\";\nimport ViewList from \"./components/ViewList\";\nimport ReviewModal from \"./components/ReviewModal\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./App.css\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\nexport class Container extends React.Component {\n  //modal variabales\n  constructor(_props) {\n    //state from map needs to live up here\n    super(_props);\n    this.targetElement = null;\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.handleOnMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.showModal = e => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.state = {\n      showingInfoWindow: false,\n      show: false,\n      activeMarker: {},\n      selectedPlace: {},\n      addresses: [],\n      locations: [],\n      names: [],\n      hours: [],\n      ratings: [],\n      currentLocation: {\n        lat: \"\",\n        lng: \"\"\n      }\n    };\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.handleOnMapClicked = this.handleOnMapClicked.bind(this);\n    this.handleCenterMoved = this.handleCenterMoved.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.targetElement = document.querySelector(\"#listView\");\n    disableBodyScroll(this.targetElement);\n  }\n\n  handleCenterMoved(mapProps, map) {\n    this.setState({\n      currentLocation: {\n        lat: map.center.lat(),\n        lng: map.center.lng()\n      }\n    }, () => {\n      this.getMapInfo();\n    });\n  }\n\n  handleLocationChange(lat, lng) {\n    this.setState({\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    }, () => {\n      this.getMapInfo();\n    });\n  }\n\n  getMapInfo() {\n    axios.get(`${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?`, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      },\n      params: {\n        categories: \"coffee, libraries\",\n        latitude: this.state.currentLocation.lat,\n        longitude: this.state.currentLocation.lng,\n        limit: 20\n      }\n    }) // set state for locations, names\n    .then(res => {\n      let locationArr = [];\n      let namesArr = [];\n      let ratingsArr = [];\n      let addressesArr = [];\n\n      for (var key in res.data.businesses) {\n        var addressesBase = res.data.businesses[key].location;\n        locationArr.push(res.data.businesses[key].coordinates);\n        namesArr.push(res.data.businesses[key].name);\n        ratingsArr.push(res.data.businesses[key].rating);\n        addressesArr.push(\"\" + addressesBase.address1 + \" \" + addressesBase.city + \", \" + addressesBase.state + \" \" + addressesBase.zip_code);\n      }\n\n      this.setState({\n        locations: locationArr,\n        names: namesArr,\n        ratings: ratingsArr,\n        addresses: addressesArr\n      });\n      console.log(this.state.names);\n    }).catch(err => {\n      console.log(\"Yelp API call error\");\n    });\n  }\n\n  render() {\n    const names = this.state.names;\n    const locations = this.state.locations;\n    const addresses = this.state.addresses;\n    const ratings = this.state.ratings;\n    const activeMarker = this.state.activeMarker;\n    const showingInfoWindow = this.state.showingInfoWindow;\n    const selectedPlace = this.state.selectedPlace;\n    const [modalShow, setModalShow] = React.useState(false);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mapListContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(ViewList, {\n      className: \"ViewList\",\n      id: \"listView\",\n      names: names,\n      locations: locations,\n      addresses: addresses,\n      ratings: ratings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(MapContainer, {\n      className: \"mapContainer\",\n      names: names,\n      locations: locations,\n      addresses: addresses,\n      ratings: ratings,\n      activeMarker: activeMarker,\n      showingInfoWindow: showingInfoWindow,\n      selectedPlace: selectedPlace,\n      onMapClicked: this.handleOnMapClicked,\n      onMarkerClick: this.onMarkerClick,\n      centerMoved: this.handleCenterMoved,\n      handleLocationChange: this.handleLocationChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => setModalShow(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Launch vertically centered modal\"), React.createElement(ReviewModal, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Container;","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/App.js"],"names":["React","Component","ReactDOM","findDOMNode","GoogleApiWrapper","InfoWindow","Marker","MapContainer","axios","ViewList","ReviewModal","Modal","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","Container","constructor","props","targetElement","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","handleOnMapClicked","state","showModal","show","addresses","locations","names","hours","ratings","currentLocation","lat","lng","bind","handleCenterMoved","handleLocationChange","componentDidMount","document","querySelector","mapProps","map","center","getMapInfo","get","headers","Authorization","process","env","REACT_APP_API_KEY","params","categories","latitude","longitude","limit","then","res","locationArr","namesArr","ratingsArr","addressesArr","key","data","businesses","addressesBase","location","push","coordinates","name","rating","address1","city","zip_code","console","log","catch","err","render","modalShow","setModalShow","useState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM, { findDOMNode } from \"react-dom\";\nimport { GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport MapContainer from \"./components/MapContainer\";\nimport axios from \"axios\";\nimport ViewList from \"./components/ViewList\";\nimport ReviewModal from \"./components/ReviewModal\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"./App.css\";\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks\n} from \"body-scroll-lock\";\n\nexport class Container extends React.Component {\n  targetElement = null;\n  //modal variabales\n\n  constructor(props) {\n    //state from map needs to live up here\n    super(props);\n\n    this.state = {\n      showingInfoWindow: false,\n      show: false,\n      activeMarker: {},\n      selectedPlace: {},\n      addresses: [],\n      locations: [],\n      names: [],\n      hours: [],\n      ratings: [],\n      currentLocation: {\n        lat: \"\",\n        lng: \"\"\n      }\n    };\n\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.handleOnMapClicked = this.handleOnMapClicked.bind(this);\n    this.handleCenterMoved = this.handleCenterMoved.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.targetElement = document.querySelector(\"#listView\");\n    disableBodyScroll(this.targetElement);\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  handleOnMapClicked = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  handleCenterMoved(mapProps, map) {\n    this.setState(\n      {\n        currentLocation: {\n          lat: map.center.lat(),\n          lng: map.center.lng()\n        }\n      },\n      () => {\n        this.getMapInfo();\n      }\n    );\n  }\n\n  handleLocationChange(lat, lng) {\n    this.setState(\n      {\n        currentLocation: {\n          lat: lat,\n          lng: lng\n        }\n      },\n      () => {\n        this.getMapInfo();\n      }\n    );\n  }\n\n  showModal = e => {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n\n  getMapInfo() {\n    axios\n      .get(\n        `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?`,\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n          },\n          params: {\n            categories: \"coffee, libraries\",\n            latitude: this.state.currentLocation.lat,\n            longitude: this.state.currentLocation.lng,\n            limit: 20\n          }\n        }\n      )\n      // set state for locations, names\n      .then(res => {\n        let locationArr = [];\n        let namesArr = [];\n        let ratingsArr = [];\n        let addressesArr = [];\n\n        for (var key in res.data.businesses) {\n          var addressesBase = res.data.businesses[key].location;\n          locationArr.push(res.data.businesses[key].coordinates);\n          namesArr.push(res.data.businesses[key].name);\n          ratingsArr.push(res.data.businesses[key].rating);\n          addressesArr.push(\n            \"\" +\n              addressesBase.address1 +\n              \" \" +\n              addressesBase.city +\n              \", \" +\n              addressesBase.state +\n              \" \" +\n              addressesBase.zip_code\n          );\n        }\n        this.setState({\n          locations: locationArr,\n          names: namesArr,\n          ratings: ratingsArr,\n          addresses: addressesArr\n        });\n        console.log(this.state.names);\n      })\n\n      .catch(err => {\n        console.log(\"Yelp API call error\");\n      });\n  }\n\n  render() {\n    const names = this.state.names;\n    const locations = this.state.locations;\n    const addresses = this.state.addresses;\n    const ratings = this.state.ratings;\n    const activeMarker = this.state.activeMarker;\n    const showingInfoWindow = this.state.showingInfoWindow;\n    const selectedPlace = this.state.selectedPlace;\n    const [modalShow, setModalShow] = React.useState(false);\n\n    return (\n      <div className={\"container\"}>\n        <div className={\"mapListContainer\"}>\n          <ViewList\n            className={\"ViewList\"}\n            id={\"listView\"}\n            names={names}\n            locations={locations}\n            addresses={addresses}\n            ratings={ratings}\n          />\n\n          <MapContainer\n            className={\"mapContainer\"}\n            names={names}\n            locations={locations}\n            addresses={addresses}\n            ratings={ratings}\n            activeMarker={activeMarker}\n            showingInfoWindow={showingInfoWindow}\n            selectedPlace={selectedPlace}\n            onMapClicked={this.handleOnMapClicked}\n            onMarkerClick={this.onMarkerClick}\n            centerMoved={this.handleCenterMoved}\n            handleLocationChange={this.handleLocationChange}\n          />\n        </div>\n        <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n          Launch vertically centered modal\n        </Button>\n\n        <ReviewModal show={modalShow} onHide={() => setModalShow(false)} />\n      </div>\n    );\n  }\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}