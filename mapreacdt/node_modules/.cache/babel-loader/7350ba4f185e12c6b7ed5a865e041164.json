{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/mapreacdt/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport Map from \"/.Map\";\nexport class MapContainer extends React.Component {\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (//getting a reference to a google object\n      React.createElement(\"div\", {\n        ref: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Map, {\n        google: this.props.google,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }))\n    );\n  }\n\n} //Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n/*\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={\"current Location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n*/","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/App.js"],"names":["React","ReactDOM","GoogleApiWrapper","Map","MapContainer","Component","render","props","google","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAChDC,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AACA;AAAK,QAAA,GAAG,EAAC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAFF;AAMD;;AAT+C,C,CAYlD;AACA;;AACA,eAAeN,gBAAgB,CAAC;AAC9BO,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZL,YAFY,CAAf;AAIA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport Map from \"/.Map\";\n\nexport class MapContainer extends React.Component {\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (\n      //getting a reference to a google object\n      <div ref=\"map\">\n        <Map google={this.props.google} />\n      </div>\n    );\n  }\n}\n\n//Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n\n/*\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={\"current Location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n*/\n"]},"metadata":{},"sourceType":"module"}