{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/mapreacdt/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Map from \"../src/components/index.js\";\nimport axios from \"axios\";\nconst API_KEY = `${process.env.REACT_APP_API_KEY}`;\nexport class MapContainer extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      locations: [],\n      name: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMapInfo();\n  }\n\n  getMapInfo() {\n    axios.get(`${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?location=91007`, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      },\n      params: {\n        categories: \"breakfast_brunch\"\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(\"error\");\n    });\n  }\n\n  // if a user clicks redo search in this area, call set state\n  // which will re render everything\n  // how to create event listeners for a component\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (//getting a reference to a google object\n      React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        },\n        className: \"map\",\n        zoom: 14,\n        onClick: this.onMapClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        title: \"The marker`s title will appear as a tooltip.\",\n        name: \"SOMA\",\n        position: {\n          lat: 37.778519,\n          lng: -122.40564\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: \"Dolores park\",\n        position: {\n          lat: 37.759703,\n          lng: -122.428093\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.selectedPlace.name))))\n    );\n  }\n\n} //Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/App.js"],"names":["React","ReactDOM","GoogleApiWrapper","InfoWindow","Marker","Map","axios","API_KEY","process","env","REACT_APP_API_KEY","MapContainer","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","state","locations","name","componentDidMount","getMapInfo","get","headers","Authorization","params","categories","then","res","console","log","catch","err","render","google","width","height","position","lat","lng","apiKey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Map from \"../src/components/index.js\";\nimport axios from \"axios\";\n\nconst API_KEY = `${process.env.REACT_APP_API_KEY}`;\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      locations: [],\n      name: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMapInfo();\n  }\n\n  getMapInfo() {\n    axios\n      .get(\n        `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?location=91007`,\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n          },\n          params: {\n            categories: \"breakfast_brunch\"\n          }\n        }\n      )\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onMapClicked = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  // if a user clicks redo search in this area, call set state\n  // which will re render everything\n  // how to create event listeners for a component\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (\n      //getting a reference to a google object\n      <Map\n        centerAroundCurrentLocation\n        google={this.props.google}\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        className={\"map\"}\n        zoom={14}\n        onClick={this.onMapClicked}\n      >\n        <Marker\n          onClick={this.onMarkerClick}\n          title={\"The marker`s title will appear as a tooltip.\"}\n          name={\"SOMA\"}\n          position={{ lat: 37.778519, lng: -122.40564 }}\n        />\n\n        <Marker\n          onClick={this.onMarkerClick}\n          name={\"Dolores park\"}\n          position={{ lat: 37.759703, lng: -122.428093 }}\n        />\n        <Marker />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n        >\n          <div>\n            <h1>{this.state.selectedPlace.name}</h1>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\n//Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}