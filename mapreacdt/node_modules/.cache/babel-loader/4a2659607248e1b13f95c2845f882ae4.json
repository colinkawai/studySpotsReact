{"ast":null,"code":"export const GoogleApi = function (opts) {\n  opts = opts || {};\n\n  if (!opts.hasOwnProperty('apiKey')) {\n    throw new Error('You must pass an apiKey to use GoogleApi');\n  }\n\n  const apiKey = opts.apiKey;\n  const libraries = opts.libraries || ['places'];\n  const client = opts.client;\n  const URL = opts.url || 'https://maps.googleapis.com/maps/api/js';\n  const googleVersion = opts.version || '3.31';\n  let script = null;\n  let google = typeof window !== 'undefined' && window.google || null;\n  let loading = false;\n  let channel = null;\n  let language = opts.language;\n  let region = opts.region || null;\n  let onLoadEvents = [];\n\n  const url = () => {\n    let url = URL;\n    let params = {\n      key: apiKey,\n      callback: 'CALLBACK_NAME',\n      libraries: libraries.join(','),\n      client: client,\n      v: googleVersion,\n      channel: channel,\n      language: language,\n      region: region,\n      onerror: 'ERROR_FUNCTION'\n    };\n    let paramStr = Object.keys(params).filter(k => !!params[k]).map(k => `${k}=${params[k]}`).join('&');\n    return `${url}?${paramStr}`;\n  };\n\n  return url();\n};\nexport default GoogleApi;","map":{"version":3,"sources":["/Users/colinkawai/studySpotsReact/mapreacdt/src/lib/GoogleApi.js"],"names":["GoogleApi","opts","hasOwnProperty","Error","apiKey","libraries","client","URL","url","googleVersion","version","script","google","window","loading","channel","language","region","onLoadEvents","params","key","callback","join","v","onerror","paramStr","Object","keys","filter","k","map"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,UAASC,IAAT,EAAe;AACtCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AAEA,MAAI,CAACA,IAAI,CAACC,cAAL,CAAoB,QAApB,CAAL,EAAoC;AAClC,UAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,QAAMC,MAAM,GAAGH,IAAI,CAACG,MAApB;AACA,QAAMC,SAAS,GAAGJ,IAAI,CAACI,SAAL,IAAkB,CAAC,QAAD,CAApC;AACA,QAAMC,MAAM,GAAGL,IAAI,CAACK,MAApB;AACA,QAAMC,GAAG,GAAGN,IAAI,CAACO,GAAL,IAAY,yCAAxB;AAEA,QAAMC,aAAa,GAAGR,IAAI,CAACS,OAAL,IAAgB,MAAtC;AAEA,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,MAAM,GAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACD,MAAzC,IAAoD,IAAjE;AACA,MAAIE,OAAO,GAAG,KAAd;AACA,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,QAAQ,GAAGf,IAAI,CAACe,QAApB;AACA,MAAIC,MAAM,GAAGhB,IAAI,CAACgB,MAAL,IAAe,IAA5B;AAEA,MAAIC,YAAY,GAAG,EAAnB;;AAEA,QAAMV,GAAG,GAAG,MAAM;AAChB,QAAIA,GAAG,GAAGD,GAAV;AACA,QAAIY,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAEhB,MADM;AAEXiB,MAAAA,QAAQ,EAAE,eAFC;AAGXhB,MAAAA,SAAS,EAAEA,SAAS,CAACiB,IAAV,CAAe,GAAf,CAHA;AAIXhB,MAAAA,MAAM,EAAEA,MAJG;AAKXiB,MAAAA,CAAC,EAAEd,aALQ;AAMXM,MAAAA,OAAO,EAAEA,OANE;AAOXC,MAAAA,QAAQ,EAAEA,QAPC;AAQXC,MAAAA,MAAM,EAAEA,MARG;AASXO,MAAAA,OAAO,EAAE;AATE,KAAb;AAYA,QAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYR,MAAZ,EACZS,MADY,CACLC,CAAC,IAAI,CAAC,CAACV,MAAM,CAACU,CAAD,CADR,EAEZC,GAFY,CAERD,CAAC,IAAK,GAAEA,CAAE,IAAGV,MAAM,CAACU,CAAD,CAAI,EAFf,EAGZP,IAHY,CAGP,GAHO,CAAf;AAKA,WAAQ,GAAEd,GAAI,IAAGiB,QAAS,EAA1B;AACD,GApBD;;AAsBA,SAAOjB,GAAG,EAAV;AACD,CA9CM;AAgDP,eAAeR,SAAf","sourcesContent":["export const GoogleApi = function(opts) {\n  opts = opts || {};\n\n  if (!opts.hasOwnProperty('apiKey')) {\n    throw new Error('You must pass an apiKey to use GoogleApi');\n  }\n\n  const apiKey = opts.apiKey;\n  const libraries = opts.libraries || ['places'];\n  const client = opts.client;\n  const URL = opts.url || 'https://maps.googleapis.com/maps/api/js';\n\n  const googleVersion = opts.version || '3.31';\n\n  let script = null;\n  let google = (typeof window !== 'undefined' && window.google) || null;\n  let loading = false;\n  let channel = null;\n  let language = opts.language;\n  let region = opts.region || null;\n\n  let onLoadEvents = [];\n\n  const url = () => {\n    let url = URL;\n    let params = {\n      key: apiKey,\n      callback: 'CALLBACK_NAME',\n      libraries: libraries.join(','),\n      client: client,\n      v: googleVersion,\n      channel: channel,\n      language: language,\n      region: region,\n      onerror: 'ERROR_FUNCTION'\n    };\n\n    let paramStr = Object.keys(params)\n      .filter(k => !!params[k])\n      .map(k => `${k}=${params[k]}`)\n      .join('&');\n\n    return `${url}?${paramStr}`;\n  };\n\n  return url();\n};\n\nexport default GoogleApi;\n"]},"metadata":{},"sourceType":"module"}