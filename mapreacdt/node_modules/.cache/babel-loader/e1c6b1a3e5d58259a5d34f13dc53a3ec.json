{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/mapreacdt/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, Map, InfoWindow, Marker } from \"google-maps-react\"; //import Map from \"./Map\";\n\nexport class MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  // if a user clicks\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (//getting a reference to a google object\n      React.createElement(Map, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        },\n        className: \"map\",\n        zoom: 20,\n        onClick: this.onMapClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        title: \"The marker`s title will appear as a tooltip.\",\n        name: \"SOMA\",\n        position: {\n          lat: 37.778519,\n          lng: -122.40564\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.selectedPlace.name))), React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: \"Dolores park\",\n        position: {\n          lat: 37.759703,\n          lng: -122.428093\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))\n    );\n  }\n\n} //Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n/*\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={\"current Location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n*/","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/App.js"],"names":["React","ReactDOM","GoogleApiWrapper","Map","InfoWindow","Marker","MapContainer","Component","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onMapClicked","render","google","width","height","position","lat","lng","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,gBAAT,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,mBAA1D,C,CACA;;AAEA,OAAO,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAChDC,KADgD,GACxC;AACNC,MAAAA,iBAAiB,EAAE,KADb;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,aAAa,EAAE;AAHT,KADwC;;AAAA,SAOhDC,aAPgD,GAOhC,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZL,MAAAA,aAAa,EAAEE,KADH;AAEZH,MAAAA,YAAY,EAAEI,MAFF;AAGZL,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAR8C;;AAAA,SAchDQ,YAdgD,GAcjCJ,KAAK,IAAI;AACtB,UAAI,KAAKL,KAAL,CAAWC,iBAAf,EAAkC;AAChC,aAAKO,QAAL,CAAc;AACZP,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KArB+C;AAAA;;AAuBhD;AACAQ,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AACA,0BAAC,GAAD;AACE,QAAA,2BAA2B,MAD7B;AAEE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAFrB;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,MAAzB;AAAiCC,UAAAA,QAAQ,EAAE;AAA3C,SAHT;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,IAAI,EAAE,EALR;AAME,QAAA,OAAO,EAAE,KAAKL,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKL,aADhB;AAEE,QAAA,KAAK,EAAE,8CAFT;AAGE,QAAA,IAAI,EAAE,MAHR;AAIE,QAAA,QAAQ,EAAE;AAAEW,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAcE,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWE,YADrB;AAEE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWG,aAAX,CAAyBc,IAA9B,CADF,CAJF,CAdF,EAsBE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKb,aADhB;AAEE,QAAA,IAAI,EAAE,cAFR;AAGE,QAAA,QAAQ,EAAE;AAAEW,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,EA2BE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF;AAFF;AAgCD;;AA1D+C,C,CA6DlD;AACA;;AACA,eAAetB,gBAAgB,CAAC;AAC9BwB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZpB,YAFY,CAAf;AAIA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, Map, InfoWindow, Marker } from \"google-maps-react\";\n//import Map from \"./Map\";\n\nexport class MapContainer extends React.Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onMapClicked = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  // if a user clicks\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (\n      //getting a reference to a google object\n      <Map\n        centerAroundCurrentLocation\n        google={this.props.google}\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        className={\"map\"}\n        zoom={20}\n        onClick={this.onMapClicked}\n      >\n        <Marker\n          onClick={this.onMarkerClick}\n          title={\"The marker`s title will appear as a tooltip.\"}\n          name={\"SOMA\"}\n          position={{ lat: 37.778519, lng: -122.40564 }}\n        />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n        >\n          <div>\n            <h1>{this.state.selectedPlace.name}</h1>\n          </div>\n        </InfoWindow>\n        <Marker\n          onClick={this.onMarkerClick}\n          name={\"Dolores park\"}\n          position={{ lat: 37.759703, lng: -122.428093 }}\n        />\n        <Marker />\n      </Map>\n    );\n  }\n}\n\n//Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n\n/*\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={\"current Location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n*/\n"]},"metadata":{},"sourceType":"module"}