{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/mapreacdt/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      //Hides or shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return (//Map component takes in optional props\n      React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        style: mapStyles //takes in CSS mapStyles object\n        ,\n        initialCenter: {\n          lat: -1.2884,\n          lng: 36.823\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: \"place\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), \" //check the Marker component\", React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.selectedPlace.name))))\n    );\n  }\n\n} //Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/App.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","render","google","lat","lng","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,mBAA1D;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,OAAO,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CS,KAD0C,GAClC;AACNC,MAAAA,iBAAiB,EAAE,KADb;AACoB;AAC1BC,MAAAA,YAAY,EAAE,EAFR;AAEY;AAClBC,MAAAA,aAAa,EAAE,EAHT,CAGY;;AAHZ,KADkC;;AAAA,SAU1CC,aAV0C,GAU1B,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZL,MAAAA,aAAa,EAAEE,KADH;AAEZH,MAAAA,YAAY,EAAEI,MAFF;AAGZL,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAXwC;;AAAA,SAiB1CQ,OAjB0C,GAiBhCJ,KAAK,IAAI;AACjB,UAAI,KAAKL,KAAL,CAAWC,iBAAf,EAAkC;AAChC,aAAKO,QAAL,CAAc;AACZP,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAxByC;AAAA;;AAyB1CQ,EAAAA,MAAM,GAAG;AACP,WACE;AACA,0BAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MADrB;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAEf,SAHT,CAGoB;AAHpB;AAIE,QAAA,aAAa,EAAE;AACbgB,UAAAA,GAAG,EAAE,CAAC,MADO;AAEbC,UAAAA,GAAG,EAAE;AAFQ,SAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKT,aAAtB;AAAqC,QAAA,IAAI,EAAE,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,mCAWE,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,YADrB;AAEE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFtB;AAGE,QAAA,OAAO,EAAE,KAAKQ,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKT,KAAL,CAAWG,aAAX,CAAyBW,IAA9B,CADF,CALF,CAXF;AAFF;AAwBD;;AAlDyC,C,CAqD5C;AACA;;AACA,eAAerB,gBAAgB,CAAC;AAC9BsB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZhB,YAFY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\"\n};\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles} //takes in CSS mapStyles object\n        initialCenter={{\n          lat: -1.2884,\n          lng: 36.823\n        }}\n      >\n        <Marker onClick={this.onMarkerClick} name={\"place\"} /> //check the\n        Marker component\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\n//Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}