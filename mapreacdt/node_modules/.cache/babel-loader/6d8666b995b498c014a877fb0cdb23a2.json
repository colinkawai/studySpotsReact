{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/mapreacdt/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, Map, InfoWindow, Marker } from \"google-maps-react\"; //import Map from \"./Map\";\n\nexport class MapContainer extends React.Component {\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (//getting a reference to a google object\n      React.createElement(Map, {\n        google: this.props.google,\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\"\n        },\n        className: \"map\",\n        zoom: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        title: \"The marker`s title will appear as a tooltip.\",\n        name: \"SOMA\",\n        position: {\n          lat: 37.778519,\n          lng: -122.40564\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        name: \"Dolores park\",\n        position: {\n          lat: 37.759703,\n          lng: -122.428093\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        name: \"Your position\",\n        position: {\n          lat: 37.762391,\n          lng: -122.439192\n        },\n        icon: {\n          url: \"/path/to/custom_icon.png\",\n          anchor: new google.maps.Point(32, 32),\n          scaledSize: new google.maps.Size(64, 64)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }))\n    );\n  }\n\n} //Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n/*\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={\"current Location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n*/","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/App.js"],"names":["React","ReactDOM","GoogleApiWrapper","Map","InfoWindow","Marker","MapContainer","Component","render","props","google","width","height","position","lat","lng","url","anchor","maps","Point","scaledSize","Size","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,gBAAT,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,mBAA1D,C,CACA;;AAEA,OAAO,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAChDC,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AACA,0BAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MADrB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,MAAzB;AAAiCC,UAAAA,QAAQ,EAAE;AAA3C,SAFT;AAGE,QAAA,SAAS,EAAE,KAHb;AAIE,QAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,8CADT;AAEE,QAAA,IAAI,EAAE,MAFR;AAGE,QAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAWE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,cADR;AAEE,QAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAgBE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,eADR;AAEE,QAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,GAAG,EAAE,CAAC;AAAxB,SAFZ;AAGE,QAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAE,0BADD;AAEJC,UAAAA,MAAM,EAAE,IAAIP,MAAM,CAACQ,IAAP,CAAYC,KAAhB,CAAsB,EAAtB,EAA0B,EAA1B,CAFJ;AAGJC,UAAAA,UAAU,EAAE,IAAIV,MAAM,CAACQ,IAAP,CAAYG,IAAhB,CAAqB,EAArB,EAAyB,EAAzB;AAHR,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF;AAFF;AA6BD;;AAhC+C,C,CAmClD;AACA;;AACA,eAAenB,gBAAgB,CAAC;AAC9BoB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZhB,YAFY,CAAf;AAIA","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, Map, InfoWindow, Marker } from \"google-maps-react\";\n//import Map from \"./Map\";\n\nexport class MapContainer extends React.Component {\n  render() {\n    // loaded prop is from the GoogleApiComponent\n    return (\n      //getting a reference to a google object\n      <Map\n        google={this.props.google}\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        className={\"map\"}\n        zoom={14}\n      >\n        <Marker\n          title={\"The marker`s title will appear as a tooltip.\"}\n          name={\"SOMA\"}\n          position={{ lat: 37.778519, lng: -122.40564 }}\n        />\n        <Marker\n          name={\"Dolores park\"}\n          position={{ lat: 37.759703, lng: -122.428093 }}\n        />\n        <Marker />\n        <Marker\n          name={\"Your position\"}\n          position={{ lat: 37.762391, lng: -122.439192 }}\n          icon={{\n            url: \"/path/to/custom_icon.png\",\n            anchor: new google.maps.Point(32, 32),\n            scaledSize: new google.maps.Size(64, 64)\n          }}\n        />\n      </Map>\n    );\n  }\n}\n\n//Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n\n/*\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, //Hides or shows the infoWindow\n    activeMarker: {}, //Shows the active marker upon click\n    selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n  };\n\n  //event handler when marker is clicked\n  //Used to show the google-maps-react component, InfoWindow\n  //Visibility for InfoWindow is controlled by the boolean visible prop\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      //Map component takes in optional props\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n        <Marker onClick={this.onMarkerClick} name={\"current Location\"} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n*/\n"]},"metadata":{},"sourceType":"module"}