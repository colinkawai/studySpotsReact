{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/studySpotsReact/mapreacdt/src/App.js\";\nimport React, { Component } from \"react\";\nimport MapContainer from \"./components/MapContainer\";\nimport axios from \"axios\";\nimport ViewList from \"./components/ViewList\";\nimport \"./App.css\";\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from \"body-scroll-lock\";\nexport class Container extends React.Component {\n  //modal variabales\n  constructor(_props) {\n    //state from map needs to live up here\n    super(_props);\n    this.targetElement = null;\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.handleOnMapClicked = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      showingInfoWindow: false,\n      show: false,\n      activeMarker: {},\n      selectedPlace: {},\n      addresses: [],\n      locations: [],\n      names: [],\n      placeID: [],\n      hours: [],\n      ratings: [],\n      currentLocation: {\n        lat: \"\",\n        lng: \"\"\n      }\n    };\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.handleOnMapClicked = this.handleOnMapClicked.bind(this);\n    this.handleCenterMoved = this.handleCenterMoved.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.filterPlaces = this.filterPlaces.bind(this);\n  }\n\n  componentDidMount() {\n    this.targetElement = document.querySelector(\"#listView\");\n    disableBodyScroll(this.targetElement);\n  }\n\n  handleCenterMoved(mapProps, map) {\n    this.setState({\n      currentLocation: {\n        lat: map.center.lat(),\n        lng: map.center.lng()\n      }\n    }, () => {\n      this.getMapInfo();\n    });\n  }\n\n  handleLocationChange(lat, lng) {\n    this.setState({\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    }, () => {\n      this.getMapInfo();\n    });\n  }\n\n  getMapInfo(filterArray) {\n    axios.get(`${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?`, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n      },\n      params: {\n        categories: \"coffee, libraries\",\n        latitude: this.state.currentLocation.lat,\n        longitude: this.state.currentLocation.lng,\n        limit: 20\n      }\n    }) // set state for locations, names\n    .then(res => {\n      let locationArr = [];\n      let namesArr = [];\n      let ratingsArr = [];\n      let addressesArr = [];\n      let placeIDArr = [];\n\n      for (var key in res.data.businesses) {\n        var addressesBase = res.data.businesses[key].location;\n        locationArr.push(res.data.businesses[key].coordinates);\n        placeIDArr.push(res.data.businesses[key].id);\n        namesArr.push(res.data.businesses[key].name);\n        ratingsArr.push(res.data.businesses[key].rating);\n        addressesArr.push(\"\" + addressesBase.address1 + \" \" + addressesBase.city + \", \" + addressesBase.state + \" \" + addressesBase.zip_code);\n      }\n\n      this.setState({\n        locations: locationArr,\n        placeID: placeIDArr,\n        names: namesArr,\n        ratings: ratingsArr,\n        addresses: addressesArr\n      }); // call another function here that applies those parameters\n      //console.log(this.state.names);\n\n      if (filterArray !== undefined) {\n        this.filterPlaces(filterArray);\n      }\n    }).catch(err => {\n      console.log(\"Yelp API call error\");\n    });\n  }\n\n  filterPlaces(filterArray) {\n    // have viewList send the filters in an array\n    // get request to the database and put the list of placeIDs in a list that excludes those places\n    // update the state\n    const placeIDArr = this.state.placeID;\n    const removeArray = [];\n\n    for (var i = 0; i < placeIDArr.length; i++) {\n      const getString = \"http://localhost:3001/api/getDataAverage\" + placeIDArr[i];\n      axios.get(getString).then(res => {\n        let resPrefix = res.data.data[0];\n        let resArray = [resPrefix.averageSeatRating, resPrefix.averageComfortRating, resPrefix.averageInternetRating, resPrefix.averageNoiseRating, resPrefix.averageOutletRating];\n\n        for (let j = 0; j < resArray.length; j++) {\n          if (resArray[j] < filterArray[j]) {\n            removeArray.push(placeIDArr[i]);\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    console.log(removeArray);\n  } // have the filters as states. And pass thsoe states off to ViewList to create\n  // a call to the database\n\n\n  render() {\n    const names = this.state.names;\n    const locations = this.state.locations;\n    const addresses = this.state.addresses;\n    const ratings = this.state.ratings;\n    const activeMarker = this.state.activeMarker;\n    const showingInfoWindow = this.state.showingInfoWindow;\n    const selectedPlace = this.state.selectedPlace;\n    const placeID = this.state.placeID;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \" Study Spots\"), React.createElement(\"div\", {\n      className: \"mapListContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(ViewList, {\n      className: \"ViewList\",\n      id: \"listView\",\n      names: names,\n      locations: locations,\n      addresses: addresses,\n      ratings: ratings,\n      placeID: placeID,\n      onFilter: this.getMapInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(MapContainer, {\n      className: \"mapContainer\",\n      names: names,\n      locations: locations,\n      addresses: addresses,\n      ratings: ratings,\n      activeMarker: activeMarker,\n      showingInfoWindow: showingInfoWindow,\n      selectedPlace: selectedPlace,\n      onMapClicked: this.handleOnMapClicked,\n      onMarkerClick: this.onMarkerClick,\n      centerMoved: this.handleCenterMoved,\n      handleLocationChange: this.handleLocationChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Container;","map":{"version":3,"sources":["/Users/colinkawai/studySpotsReact/mapreacdt/src/App.js"],"names":["React","Component","MapContainer","axios","ViewList","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","Container","constructor","props","targetElement","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","handleOnMapClicked","state","show","addresses","locations","names","placeID","hours","ratings","currentLocation","lat","lng","bind","handleCenterMoved","handleLocationChange","filterPlaces","componentDidMount","document","querySelector","mapProps","map","center","getMapInfo","filterArray","get","headers","Authorization","process","env","REACT_APP_API_KEY","params","categories","latitude","longitude","limit","then","res","locationArr","namesArr","ratingsArr","addressesArr","placeIDArr","key","data","businesses","addressesBase","location","push","coordinates","id","name","rating","address1","city","zip_code","undefined","catch","err","console","log","removeArray","i","length","getString","resPrefix","resArray","averageSeatRating","averageComfortRating","averageInternetRating","averageNoiseRating","averageOutletRating","j","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MapContainer from \"./components/MapContainer\";\nimport axios from \"axios\";\nimport ViewList from \"./components/ViewList\";\nimport \"./App.css\";\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks\n} from \"body-scroll-lock\";\n\nexport class Container extends React.Component {\n  targetElement = null;\n  //modal variabales\n\n  constructor(props) {\n    //state from map needs to live up here\n    super(props);\n\n    this.state = {\n      showingInfoWindow: false,\n      show: false,\n      activeMarker: {},\n      selectedPlace: {},\n      addresses: [],\n      locations: [],\n      names: [],\n      placeID: [],\n      hours: [],\n      ratings: [],\n      currentLocation: {\n        lat: \"\",\n        lng: \"\"\n      }\n    };\n\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.handleOnMapClicked = this.handleOnMapClicked.bind(this);\n    this.handleCenterMoved = this.handleCenterMoved.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.filterPlaces = this.filterPlaces.bind(this);\n  }\n\n  componentDidMount() {\n    this.targetElement = document.querySelector(\"#listView\");\n    disableBodyScroll(this.targetElement);\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  handleOnMapClicked = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  handleCenterMoved(mapProps, map) {\n    this.setState(\n      {\n        currentLocation: {\n          lat: map.center.lat(),\n          lng: map.center.lng()\n        }\n      },\n      () => {\n        this.getMapInfo();\n      }\n    );\n  }\n\n  handleLocationChange(lat, lng) {\n    this.setState(\n      {\n        currentLocation: {\n          lat: lat,\n          lng: lng\n        }\n      },\n      () => {\n        this.getMapInfo();\n      }\n    );\n  }\n\n  getMapInfo(filterArray) {\n    axios\n      .get(\n        `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?`,\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`\n          },\n          params: {\n            categories: \"coffee, libraries\",\n            latitude: this.state.currentLocation.lat,\n            longitude: this.state.currentLocation.lng,\n            limit: 20\n          }\n        }\n      )\n      // set state for locations, names\n      .then(res => {\n        let locationArr = [];\n        let namesArr = [];\n        let ratingsArr = [];\n        let addressesArr = [];\n        let placeIDArr = [];\n\n        for (var key in res.data.businesses) {\n          var addressesBase = res.data.businesses[key].location;\n\n          locationArr.push(res.data.businesses[key].coordinates);\n          placeIDArr.push(res.data.businesses[key].id);\n          namesArr.push(res.data.businesses[key].name);\n          ratingsArr.push(res.data.businesses[key].rating);\n          addressesArr.push(\n            \"\" +\n              addressesBase.address1 +\n              \" \" +\n              addressesBase.city +\n              \", \" +\n              addressesBase.state +\n              \" \" +\n              addressesBase.zip_code\n          );\n        }\n        this.setState({\n          locations: locationArr,\n          placeID: placeIDArr,\n          names: namesArr,\n          ratings: ratingsArr,\n          addresses: addressesArr\n        });\n\n        // call another function here that applies those parameters\n        //console.log(this.state.names);\n        if (filterArray !== undefined) {\n          this.filterPlaces(filterArray);\n        }\n      })\n\n      .catch(err => {\n        console.log(\"Yelp API call error\");\n      });\n  }\n  filterPlaces(filterArray) {\n    // have viewList send the filters in an array\n    // get request to the database and put the list of placeIDs in a list that excludes those places\n    // update the state\n    const placeIDArr = this.state.placeID;\n    const removeArray = [];\n\n    for (var i = 0; i < placeIDArr.length; i++) {\n      const getString =\n        \"http://localhost:3001/api/getDataAverage\" + placeIDArr[i];\n      axios\n        .get(getString)\n        .then(res => {\n          let resPrefix = res.data.data[0];\n          let resArray = [\n            resPrefix.averageSeatRating,\n            resPrefix.averageComfortRating,\n            resPrefix.averageInternetRating,\n            resPrefix.averageNoiseRating,\n            resPrefix.averageOutletRating\n          ];\n          for (let j = 0; j < resArray.length; j++) {\n            if (resArray[j] < filterArray[j]) {\n              removeArray.push(placeIDArr[i]);\n            }\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n    console.log(removeArray);\n  }\n\n  // have the filters as states. And pass thsoe states off to ViewList to create\n  // a call to the database\n  render() {\n    const names = this.state.names;\n    const locations = this.state.locations;\n    const addresses = this.state.addresses;\n    const ratings = this.state.ratings;\n    const activeMarker = this.state.activeMarker;\n    const showingInfoWindow = this.state.showingInfoWindow;\n    const selectedPlace = this.state.selectedPlace;\n    const placeID = this.state.placeID;\n    return (\n      <div className={\"container\"}>\n        <div id=\"title\"> Study Spots</div>\n        <div className={\"mapListContainer\"}>\n          <ViewList\n            className={\"ViewList\"}\n            id={\"listView\"}\n            names={names}\n            locations={locations}\n            addresses={addresses}\n            ratings={ratings}\n            placeID={placeID}\n            onFilter={this.getMapInfo}\n          />\n\n          <MapContainer\n            className={\"mapContainer\"}\n            names={names}\n            locations={locations}\n            addresses={addresses}\n            ratings={ratings}\n            activeMarker={activeMarker}\n            showingInfoWindow={showingInfoWindow}\n            selectedPlace={selectedPlace}\n            onMapClicked={this.handleOnMapClicked}\n            onMarkerClick={this.onMarkerClick}\n            centerMoved={this.handleCenterMoved}\n            handleLocationChange={this.handleLocationChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}