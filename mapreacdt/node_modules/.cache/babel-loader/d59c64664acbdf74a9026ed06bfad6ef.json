{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { camelize } from '../lib/String';\nconst evtNames = ['click', 'mouseover', 'recenter'];\n\nconst wrappedPromise = function () {\n  var wrappedPromise = {},\n      promise = new Promise(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n  wrappedPromise.then = promise.then.bind(promise);\n  wrappedPromise.catch = promise.catch.bind(promise);\n  wrappedPromise.promise = promise;\n  return wrappedPromise;\n};\n\nexport class HeatMap extends React.Component {\n  componentDidMount() {\n    this.heatMapPromise = wrappedPromise();\n    this.renderHeatMap();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.map !== prevProps.map || this.props.position !== prevProps.position) {\n      if (this.heatMap) {\n        this.heatMap.setMap(null);\n        this.renderHeatMap();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.heatMap) {\n      this.heatMap.setMap(null);\n    }\n  }\n\n  renderHeatMap() {\n    const {\n      map,\n      google,\n      positions,\n      mapCenter,\n      icon,\n      gradient,\n      radius = 20,\n      opacity = 0.2,\n      ...props\n    } = this.props;\n\n    if (!google) {\n      return null;\n    }\n\n    const data = positions.map(pos => {\n      return {\n        location: new google.maps.LatLng(pos.lat, pos.lng),\n        weight: pos.weight\n      };\n    });\n    const pref = {\n      map,\n      gradient,\n      radius,\n      opacity,\n      data,\n      ...props\n    };\n    this.heatMap = new google.maps.visualization.HeatmapLayer(pref);\n    this.heatMap.set('radius', radius === undefined ? 20 : radius);\n    this.heatMap.set('opacity', opacity === undefined ? 0.2 : opacity);\n    evtNames.forEach(e => {\n      this.heatMap.addListener(e, this.handleEvent(e));\n    });\n    this.heatMapPromise.resolve(this.heatMap);\n  }\n\n  getHeatMap() {\n    return this.heatMapPromise;\n  }\n\n  handleEvent(evt) {\n    return e => {\n      const evtName = `on${camelize(evt)}`;\n\n      if (this.props[evtName]) {\n        this.props[evtName](this.props, this.heatMap, e);\n      }\n    };\n  }\n\n  render() {\n    return null;\n  }\n\n}\nHeatMap.propTypes = {\n  position: PropTypes.object,\n  map: PropTypes.object,\n  icon: PropTypes.string\n};\nevtNames.forEach(e => HeatMap.propTypes[e] = PropTypes.func);\nHeatMap.defaultProps = {\n  name: 'HeatMap'\n};\nexport default HeatMap;","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/google-maps-react/src/components/HeatMap.js"],"names":["React","PropTypes","camelize","evtNames","wrappedPromise","promise","Promise","resolve","reject","then","bind","catch","HeatMap","Component","componentDidMount","heatMapPromise","renderHeatMap","componentDidUpdate","prevProps","props","map","position","heatMap","setMap","componentWillUnmount","google","positions","mapCenter","icon","gradient","radius","opacity","data","pos","location","maps","LatLng","lat","lng","weight","pref","visualization","HeatmapLayer","set","undefined","forEach","e","addListener","handleEvent","getHeatMap","evt","evtName","render","propTypes","object","string","func","defaultProps","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { camelize } from '../lib/String'\nconst evtNames = ['click', 'mouseover', 'recenter'];\n\nconst wrappedPromise = function() {\n    var wrappedPromise = {},\n        promise = new Promise(function (resolve, reject) {\n            wrappedPromise.resolve = resolve;\n            wrappedPromise.reject = reject;\n        });\n    wrappedPromise.then = promise.then.bind(promise);\n    wrappedPromise.catch = promise.catch.bind(promise);\n    wrappedPromise.promise = promise;\n\n    return wrappedPromise;\n}\n\nexport class HeatMap extends React.Component {\n\n  componentDidMount() {\n    this.heatMapPromise = wrappedPromise();\n    this.renderHeatMap();\n  }\n\n  componentDidUpdate(prevProps) {\n    if ((this.props.map !== prevProps.map) ||\n      (this.props.position !== prevProps.position)) {\n        if (this.heatMap) {\n          this.heatMap.setMap(null);\n          this.renderHeatMap();\n        }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.heatMap) {\n      this.heatMap.setMap(null);\n    }\n  }\n\n  renderHeatMap() {\n    const {\n      map,\n      google,\n      positions,\n      mapCenter,\n      icon,\n      gradient,\n      radius = 20,\n      opacity = 0.2,\n      ...props\n    } = this.props;\n\n    if (!google) {\n        return null;\n    }\n\n    const data = positions.map((pos) => {\n        return {location: new google.maps.LatLng(pos.lat, pos.lng), weight:pos.weight}\n    });\n\n    const pref = {\n      map,\n      gradient,\n      radius,\n      opacity,\n      data,\n      ...props\n    };\n\n    this.heatMap = new google.maps.visualization.HeatmapLayer(pref);\n\n    this.heatMap.set('radius', radius === undefined ? 20 : radius);\n\n    this.heatMap.set('opacity', opacity === undefined ? 0.2 : opacity);\n\n    evtNames.forEach(e => {\n      this.heatMap.addListener(e, this.handleEvent(e));\n    });\n\n    this.heatMapPromise.resolve(this.heatMap);\n  }\n\n  getHeatMap() {\n    return this.heatMapPromise;\n  }\n\n  handleEvent(evt) {\n    return (e) => {\n      const evtName = `on${camelize(evt)}`\n      if (this.props[evtName]) {\n        this.props[evtName](this.props, this.heatMap, e);\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nHeatMap.propTypes = {\n  position: PropTypes.object,\n  map: PropTypes.object,\n  icon: PropTypes.string\n}\n\nevtNames.forEach(e => HeatMap.propTypes[e] = PropTypes.func)\n\nHeatMap.defaultProps = {\n  name: 'HeatMap'\n}\n\nexport default HeatMap\n"]},"metadata":{},"sourceType":"module"}