{"version":3,"sources":["lib/ScriptCache.js","lib/String.js","components/Marker.js","components/InfoWindow.js","components/index.js","lib/cancelablePromise.js","components/MapContainer.js","components/ReviewModal.js","components/FilterList.js","components/WriteReviewModal.js","components/ViewList.js","App.js","serviceWorker.js","index.js","lib/windowOrGlobal.js"],"names":["global","camelize","str","split","map","word","charAt","toUpperCase","slice","join","counter","window","require","scriptMap","_scriptMap","Map","evtNames","Marker","this","markerPromise","wrappedPromise","promise","Promise","resolve","reject","then","bind","catch","renderMarker","prevProps","props","position","icon","marker","setMap","google","mapCenter","label","draggable","title","pos","maps","LatLng","lat","lng","pref","forEach","e","addListener","handleEvent","evt","evtName","React","Component","propTypes","PropTypes","func","defaultProps","name","InfoWindow","renderInfoWindow","updatePosition","children","updateContent","visible","openWindow","closeWindow","iw","infowindow","content","event","onClose","onOpen","open","setPosition","renderChildren","setContent","close","ReactDOMServer","renderToString","mapStyles","width","height","left","right","bottom","top","hasOwnProperty","Error","listeners","state","currentLocation","initialCenter","mapRef","createRef","handleChange","returnLat","returnLng","onLocationChange","centerAroundCurrentLocation","navigator","geolocation","geoPromise","hasCanceled_","val","isCanceled","error","cancel","makeCancelable","getCurrentPosition","coords","setState","latitude","longitude","loadMap","prevState","restyleMap","zoom","setZoom","center","recenterMap","bounds","fitBounds","Object","keys","removeListener","current","node","ReactDOM","findDOMNode","curr","mapTypeIds","MapTypeId","mapTypeFromProps","String","mapType","mapConfig","assign","mapTypeId","maxZoom","minZoom","clickableIcons","disableDefaultUI","zoomControl","zoomControlOptions","mapTypeControl","mapTypeControlOptions","scaleControl","streetViewControl","streetViewControlOptions","panControl","rotateControl","fullscreenControl","scrollwheel","draggableCursor","keyboardShortcuts","disableDoubleClickZoom","noClear","styles","gestureHandling","key","trigger","forceUpdate","timeout","handlerName","clearTimeout","setTimeout","setCenter","Children","c","cloneElement","style","display","containerStyles","containerStyle","className","ref","MapContainer","process","onMarkerClick","onMapClicked","showingInfoWindow","locationChange","centerMoved","mapProps","handleLocationChange","names","locations","addresses","ratings","activeMarker","selectedPlace","elements","i","length","push","onClick","onDragend","GoogleApiWrapper","apiKey","ReviewModal","buttonLabel","placeID","useState","seating","setSeating","comfort","setComfort","speed","setSpeed","noise","setNoise","outlet","setOutlet","setHours","setPhone","modal","setModal","toggle","getString","Button","color","axios","get","res","data","averageSeatRating","averageComfortRating","averageInternetRating","averageNoiseRating","averageOutletRating","err","console","log","headers","Authorization","hours","is_open_now","display_phone","Modal","isOpen","fade","ModalHeader","ModalBody","editing","starCount","value","ModalFooter","FilterList","setIsOpen","id","marginBottom","marginTop","marginLeft","Collapse","Card","CardBody","onStarClick","nextValue","prevValue","onFilter","WriteReviewModal","rating","putData","ViewList","putDataToDB","rateSeating","rateComfort","rateIspeed","rateNoise","rateOutlet","post","seatRating","comfortRating","noiseRating","internetRating","outletRating","filterPlaces","createList","newArray","showReviews","filterArray","App","targetElement","handleOnMapClicked","handleFilters","a","getMapInfo","paramArray","filteredArray","removePlaces","removedArray","filterFinal","returned","locationArr","namesArr","ratingsArr","addressesArr","placeIDArr","params","categories","limit","businesses","addressesBase","location","coordinates","address1","city","zip_code","undefined","locationsArr","removeArray","resArray","j","placeIDCopy","locationArrayCopy","namesCopy","ratingsCopy","addressesCopy","splice","show","handleCenterMoved","connectToServer","document","querySelector","disableBodyScroll","fetch","Boolean","hostname","match","render","getElementById","serviceWorker","ready","registration","unregister","module","exports","self"],"mappings":"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","file":"static/js/main.7c80ade8.chunk.js","sourcesContent":["let counter = 0;\nconst window = require(\"./windowOrGlobal\");\nlet scriptMap =\n  (typeof window !== \"undefined\" && window._scriptMap) || new Map();\n\nexport const ScriptCache = (function(global) {\n  global._scriptMap = global._scriptMap || scriptMap;\n  return function ScriptCache(scripts) {\n    const Cache = {};\n\n    Cache._onLoad = function(key) {\n      return cb => {\n        let registered = true;\n\n        function unregister() {\n          registered = false;\n        }\n\n        let stored = scriptMap.get(key);\n\n        if (stored) {\n          stored.promise.then(() => {\n            if (registered) {\n              stored.error ? cb(stored.error) : cb(null, stored);\n            }\n\n            return stored;\n          });\n        } else {\n          // TODO:\n        }\n\n        return unregister;\n      };\n    };\n\n    Cache._scriptTag = (key, src) => {\n      if (!scriptMap.has(key)) {\n        // Server side rendering environments don't always have access to the `document` global.\n        // In these cases, we're not going to be able to return a script tag, so just return null.\n        if (typeof document === \"undefined\") return null;\n\n        let tag = document.createElement(\"script\");\n        let promise = new Promise((resolve, reject) => {\n          let resolved = false,\n            errored = false,\n            body = document.getElementsByTagName(\"body\")[0];\n\n          tag.type = \"text/javascript\";\n          tag.async = false; // Load in order\n\n          const cbName = `loaderCB${counter++}${Date.now()}`;\n          let cb;\n\n          let handleResult = state => {\n            return evt => {\n              let stored = scriptMap.get(key);\n              if (state === \"loaded\") {\n                stored.resolved = true;\n                resolve(src);\n                // stored.handlers.forEach(h => h.call(null, stored))\n                // stored.handlers = []\n              } else if (state === \"error\") {\n                stored.errored = true;\n                // stored.handlers.forEach(h => h.call(null, stored))\n                // stored.handlers = [];\n                reject(evt);\n              }\n              stored.loaded = true;\n\n              cleanup();\n            };\n          };\n\n          const cleanup = () => {\n            if (global[cbName] && typeof global[cbName] === \"function\") {\n              global[cbName] = null;\n              delete global[cbName];\n            }\n          };\n\n          tag.onload = handleResult(\"loaded\");\n          tag.onerror = handleResult(\"error\");\n          tag.onreadystatechange = () => {\n            handleResult(tag.readyState);\n          };\n\n          // Pick off callback, if there is one\n          if (src.match(/callback=CALLBACK_NAME/)) {\n            src = src.replace(/(callback=)[^\\&]+/, `$1${cbName}`);\n            cb = window[cbName] = tag.onload;\n          } else {\n            tag.addEventListener(\"load\", tag.onload);\n          }\n          tag.addEventListener(\"error\", tag.onerror);\n\n          tag.src = src;\n          body.appendChild(tag);\n\n          return tag;\n        });\n        let initialState = {\n          loaded: false,\n          error: false,\n          promise: promise,\n          tag\n        };\n        scriptMap.set(key, initialState);\n      }\n      return scriptMap.get(key);\n    };\n\n    // let scriptTags = document.querySelectorAll('script')\n    //\n    // NodeList.prototype.filter = Array.prototype.filter;\n    // NodeList.prototype.map = Array.prototype.map;\n    // const initialScripts = scriptTags\n    //   .filter(s => !!s.src)\n    //   .map(s => s.src.split('?')[0])\n    //   .reduce((memo, script) => {\n    //     memo[script] = script;\n    //     return memo;\n    //   }, {});\n\n    Object.keys(scripts).forEach(function(key) {\n      const script = scripts[key];\n\n      const tag = window._scriptMap.has(key)\n        ? window._scriptMap.get(key).tag\n        : Cache._scriptTag(key, script);\n\n      Cache[key] = {\n        tag: tag,\n        onLoad: Cache._onLoad(key)\n      };\n    });\n\n    return Cache;\n  };\n})(window);\n\nexport default ScriptCache;\n","export const camelize = function(str) {\n  return str.split(' ').map(function(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join('');\n}\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { camelize } from \"../lib/String.js\";\n\nconst evtNames = [\n  \"click\",\n  \"dblclick\",\n  \"dragend\",\n  \"mousedown\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"recenter\"\n];\n\nconst wrappedPromise = function() {\n  var wrappedPromise = {},\n    promise = new Promise(function(resolve, reject) {\n      wrappedPromise.resolve = resolve;\n      wrappedPromise.reject = reject;\n    });\n  wrappedPromise.then = promise.then.bind(promise);\n  wrappedPromise.catch = promise.catch.bind(promise);\n  wrappedPromise.promise = promise;\n\n  return wrappedPromise;\n};\n\nexport class Marker extends React.Component {\n  componentDidMount() {\n    this.markerPromise = wrappedPromise();\n    this.renderMarker();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.map !== prevProps.map ||\n      this.props.position !== prevProps.position ||\n      this.props.icon !== prevProps.icon\n    ) {\n      if (this.marker) {\n        this.marker.setMap(null);\n      }\n      this.renderMarker();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.marker) {\n      this.marker.setMap(null);\n    }\n  }\n\n  renderMarker() {\n    const {\n      map,\n      google,\n      position,\n      mapCenter,\n      icon,\n      label,\n      draggable,\n      title,\n      ...props\n    } = this.props;\n    if (!google) {\n      return null;\n    }\n\n    let pos = position || mapCenter;\n    if (!(pos instanceof google.maps.LatLng)) {\n      pos = new google.maps.LatLng(pos.lat, pos.lng);\n    }\n\n    const pref = {\n      map,\n      position: pos,\n      icon,\n      label,\n      title,\n      draggable,\n      ...props\n    };\n    this.marker = new google.maps.Marker(pref);\n\n    evtNames.forEach(e => {\n      this.marker.addListener(e, this.handleEvent(e));\n    });\n\n    this.markerPromise.resolve(this.marker);\n  }\n\n  getMarker() {\n    return this.markerPromise;\n  }\n\n  handleEvent(evt) {\n    return e => {\n      const evtName = `on${camelize(evt)}`;\n      if (this.props[evtName]) {\n        this.props[evtName](this.props, this.marker, e);\n      }\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nMarker.propTypes = {\n  position: PropTypes.object,\n  map: PropTypes.object\n};\n\nevtNames.forEach(e => (Marker.propTypes[e] = PropTypes.func));\n\nMarker.defaultProps = {\n  name: \"Marker\"\n};\n\nexport default Marker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport ReactDOMServer from \"react-dom/server\";\n\nexport class InfoWindow extends React.Component {\n  componentDidMount() {\n    this.renderInfoWindow();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { google, map } = this.props;\n\n    if (!google || !map) {\n      return;\n    }\n\n    if (map !== prevProps.map) {\n      this.renderInfoWindow();\n    }\n\n    if (this.props.position !== prevProps.position) {\n      this.updatePosition();\n    }\n\n    if (this.props.children !== prevProps.children) {\n      this.updateContent();\n    }\n\n    if (\n      this.props.visible !== prevProps.visible ||\n      this.props.marker !== prevProps.marker ||\n      this.props.position !== prevProps.position\n    ) {\n      this.props.visible ? this.openWindow() : this.closeWindow();\n    }\n  }\n\n  renderInfoWindow() {\n    const { map, google, mapCenter, ...props } = this.props;\n\n    if (!google || !google.maps) {\n      return;\n    }\n\n    const iw = (this.infowindow = new google.maps.InfoWindow({\n      content: \"\",\n      ...props\n    }));\n\n    google.maps.event.addListener(iw, \"closeclick\", this.onClose.bind(this));\n    google.maps.event.addListener(iw, \"domready\", this.onOpen.bind(this));\n  }\n\n  onOpen() {\n    if (this.props.onOpen) {\n      this.props.onOpen();\n    }\n  }\n\n  onClose() {\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  }\n\n  openWindow() {\n    this.infowindow.open(this.props.map, this.props.marker);\n  }\n\n  updatePosition() {\n    let pos = this.props.position;\n    if (!(pos instanceof window.google.maps.LatLng)) {\n      pos = pos && new window.google.maps.LatLng(pos.lat, pos.lng);\n    }\n    this.infowindow.setPosition(pos);\n  }\n\n  updateContent() {\n    const content = this.renderChildren();\n    this.infowindow.setContent(content);\n  }\n\n  closeWindow() {\n    this.infowindow.close();\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n    return ReactDOMServer.renderToString(children);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nInfoWindow.propTypes = {\n  children: PropTypes.element.isRequired,\n  map: PropTypes.object,\n  marker: PropTypes.object,\n  position: PropTypes.object,\n  visible: PropTypes.bool,\n\n  // callbacks\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func\n};\n\nInfoWindow.defaultProps = {\n  visible: false\n};\n\nexport default InfoWindow;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport { camelize } from \"../lib/String.js\";\nimport { makeCancelable } from \"../lib/cancelablePromise.js\";\nimport \"../App.css\";\n\nconst mapStyles = {\n  container: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  map: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n};\n\nconst evtNames = [\n  \"ready\",\n  \"click\",\n  \"dragend\",\n  \"recenter\",\n  \"bounds_changed\",\n  \"center_changed\",\n  \"dblclick\",\n  \"dragstart\",\n  \"heading_change\",\n  \"idle\",\n  \"maptypeid_changed\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"projection_changed\",\n  \"resize\",\n  \"rightclick\",\n  \"tilesloaded\",\n  \"tilt_changed\",\n  \"zoom_changed\"\n];\n\nexport { wrapper as GoogleApiWrapper } from \"./GoogleApiComponent\";\nexport { Marker } from \"./Marker\";\nexport { InfoWindow } from \"./InfoWindow\";\n\nexport class Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (!props.hasOwnProperty(\"google\")) {\n      throw new Error(\"You must include a `google` prop\");\n    }\n\n    this.listeners = {};\n    this.state = {\n      currentLocation: {\n        lat: this.props.initialCenter.lat,\n        lng: this.props.initialCenter.lng\n      }\n    };\n\n    this.mapRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange() {\n    const returnLat = this.state.currentLocation.lat;\n    const returnLng = this.state.currentLocation.lng;\n\n    this.props.onLocationChange(returnLat, returnLng);\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        this.geoPromise = makeCancelable(\n          new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(resolve, reject);\n          })\n        );\n\n        this.geoPromise.promise\n          .then(pos => {\n            const coords = pos.coords;\n            this.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n          })\n          .catch(e => e);\n      }\n    }\n\n    this.loadMap();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (this.props.visible !== prevProps.visible) {\n      this.restyleMap();\n    }\n    if (this.props.zoom !== prevProps.zoom) {\n      this.map.setZoom(this.props.zoom);\n    }\n    if (this.props.center !== prevProps.center) {\n      this.setState({\n        currentLocation: this.props.center\n      });\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n      this.handleChange();\n    }\n    if (this.props.bounds && this.props.bounds !== prevProps.bounds) {\n      this.map.fitBounds(this.props.bounds);\n    }\n  }\n\n  componentWillUnmount() {\n    const { google } = this.props;\n    if (this.geoPromise) {\n      this.geoPromise.cancel();\n    }\n    Object.keys(this.listeners).forEach(e => {\n      google.maps.event.removeListener(this.listeners[e]);\n    });\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.mapRef.current;\n      const node = ReactDOM.findDOMNode(mapRef);\n      const curr = this.state.currentLocation;\n      const center = new maps.LatLng(curr.lat, curr.lng);\n\n      const mapTypeIds = this.props.google.maps.MapTypeId || {};\n      const mapTypeFromProps = String(this.props.mapType).toUpperCase();\n\n      const mapConfig = Object.assign(\n        {},\n        {\n          mapTypeId: mapTypeIds[mapTypeFromProps],\n          center: center,\n          zoom: this.props.zoom,\n          maxZoom: this.props.maxZoom,\n          minZoom: this.props.minZoom,\n          clickableIcons: !!this.props.clickableIcons,\n          disableDefaultUI: this.props.disableDefaultUI,\n          zoomControl: this.props.zoomControl,\n          zoomControlOptions: this.props.zoomControlOptions,\n          mapTypeControl: this.props.mapTypeControl,\n          mapTypeControlOptions: this.props.mapTypeControlOptions,\n          scaleControl: this.props.scaleControl,\n          streetViewControl: this.props.streetViewControl,\n          streetViewControlOptions: this.props.streetViewControlOptions,\n          panControl: this.props.panControl,\n          rotateControl: this.props.rotateControl,\n          fullscreenControl: this.props.fullscreenControl,\n          scrollwheel: this.props.scrollwheel,\n          draggable: this.props.draggable,\n          draggableCursor: this.props.draggableCursor,\n          keyboardShortcuts: this.props.keyboardShortcuts,\n          disableDoubleClickZoom: this.props.disableDoubleClickZoom,\n          noClear: this.props.noClear,\n          styles: this.props.styles,\n          gestureHandling: this.props.gestureHandling\n        }\n      );\n\n      Object.keys(mapConfig).forEach(key => {\n        // Allow to configure mapConfig with 'false'\n        if (mapConfig[key] === null) {\n          delete mapConfig[key];\n        }\n      });\n\n      this.map = new maps.Map(node, mapConfig);\n\n      evtNames.forEach(e => {\n        this.listeners[e] = this.map.addListener(e, this.handleEvent(e));\n      });\n      maps.event.trigger(this.map, \"ready\");\n      this.forceUpdate();\n    }\n  }\n\n  handleEvent(evtName) {\n    let timeout;\n    const handlerName = `on${camelize(evtName)}`;\n\n    return e => {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      timeout = setTimeout(() => {\n        if (this.props[handlerName]) {\n          this.props[handlerName](this.props, this.map, e);\n        }\n      }, 0);\n    };\n  }\n\n  recenterMap() {\n    const map = this.map;\n\n    const { google } = this.props;\n\n    if (!google) return;\n    const maps = google.maps;\n\n    if (map) {\n      let center = this.state.currentLocation;\n\n      if (!(center instanceof google.maps.LatLng)) {\n        center = new google.maps.LatLng(center.lat, center.lng);\n      }\n      // map.panTo(center)\n      map.setCenter(center);\n      maps.event.trigger(map, \"recenter\");\n    }\n  }\n\n  restyleMap() {\n    if (this.map) {\n      const { google } = this.props;\n      google.maps.event.trigger(this.map, \"resize\");\n    }\n  }\n\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map, this.props.style, {\n      display: this.props.visible ? \"inherit\" : \"none\"\n    });\n    const currentLocation = this.state.currentLocation;\n    const containerStyles = Object.assign(\n      {},\n      mapStyles.container,\n      this.props.containerStyle\n    );\n\n    return (\n      <div style={containerStyles} className={this.props.className}>\n        <div style={{ height: \"100%\", width: \"100%\" }} ref={this.mapRef}>\n          Loading map...\n        </div>\n\n        {this.renderChildren()}\n      </div>\n    );\n  }\n}\n\nMap.propTypes = {\n  google: PropTypes.object,\n  zoom: PropTypes.number,\n  centerAroundCurrentLocation: PropTypes.bool,\n  center: PropTypes.object,\n  initialCenter: PropTypes.object,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  containerStyle: PropTypes.object,\n  visible: PropTypes.bool,\n  mapType: PropTypes.string,\n  maxZoom: PropTypes.number,\n  minZoom: PropTypes.number,\n  clickableIcons: PropTypes.bool,\n  disableDefaultUI: PropTypes.bool,\n  zoomControl: PropTypes.bool,\n  zoomControlOptions: PropTypes.object,\n  mapTypeControl: PropTypes.bool,\n  mapTypeControlOptions: PropTypes.bool,\n  scaleControl: PropTypes.bool,\n  streetViewControl: PropTypes.bool,\n  streetViewControlOptions: PropTypes.object,\n  panControl: PropTypes.bool,\n  rotateControl: PropTypes.bool,\n  fullscreenControl: PropTypes.bool,\n  scrollwheel: PropTypes.bool,\n  draggable: PropTypes.bool,\n  draggableCursor: PropTypes.string,\n  keyboardShortcuts: PropTypes.bool,\n  disableDoubleClickZoom: PropTypes.bool,\n  noClear: PropTypes.bool,\n  styles: PropTypes.array,\n  gestureHandling: PropTypes.string,\n  bounds: PropTypes.object\n};\n\nevtNames.forEach(e => (Map.propTypes[camelize(e)] = PropTypes.func));\n\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 37.774929,\n    lng: -122.419416\n  },\n  center: {},\n  centerAroundCurrentLocation: false,\n  style: {},\n  containerStyle: {},\n  visible: true\n};\n\nexport default Map;\n","// https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html\n\nexport const makeCancelable = (promise) => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then((val) =>\n      hasCanceled_ ? reject({isCanceled: true}) : resolve(val)\n    );\n    promise.catch((error) =>\n      hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    },\n  };\n};\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Map from \"../components/index.js\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nconst API_KEY = `${process.env.REACT_APP_API_KEY}`;\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.locationChange = this.locationChange.bind(this);\n    this.onMapClicked = this.onMapClicked.bind(this);\n    this.centerMoved = this.centerMoved.bind(this);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.props.onMarkerClick(props, marker, e);\n  };\n\n  onMapClicked = props => {\n    if (this.props.showingInfoWindow) {\n      this.props.onMapClicked();\n    }\n  };\n\n  centerMoved(mapProps, map) {\n    this.props.centerMoved(mapProps, map);\n  }\n\n  //after a location change call after recall the api\n  // using a setState callback (setState(updater, callback))\n  locationChange(lat, lng) {\n    this.props.handleLocationChange(lat, lng);\n  }\n\n  // if a user clicks redo search in this area, call set state\n  // which will re render everything\n  // how to create event listeners for a component\n  render() {\n    const names = this.props.names;\n    const locations = this.props.locations;\n    const addresses = this.props.addresses;\n    const ratings = this.props.ratings;\n    const activeMarker = this.props.activeMarker;\n    const showingInfoWindow = this.props.showingInfoWindow;\n    const selectedPlace = this.props.selectedPlace;\n    var elements = [];\n    for (var i = 0; i < names.length; i++) {\n      elements.push(\n        <Marker\n          onClick={this.onMarkerClick}\n          title={names[i]}\n          name={names[i]}\n          position={{\n            lat: locations[i].latitude,\n            lng: locations[i].longitude\n          }}\n          addresses={addresses[i]}\n          ratings={ratings[i]}\n        />\n      );\n    }\n    // loaded prop is from the GoogleApiComponent\n    return (\n      //getting a reference to a google object\n      <div>\n        <Map\n          centerAroundCurrentLocation\n          google={this.props.google}\n          style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n          className={\"map\"}\n          zoom={14}\n          onClick={this.onMapClicked}\n          onDragend={this.centerMoved}\n          onLocationChange={this.locationChange}\n        >\n          {elements}\n          <InfoWindow marker={activeMarker} visible={showingInfoWindow}>\n            <div>\n              <h1>{selectedPlace.name}</h1>\n              <h2>Yelp Rating: {selectedPlace.ratings}/5</h2>\n              <h3>{selectedPlace.addresses}</h3>\n            </div>\n          </InfoWindow>\n        </Map>\n      </div>\n    );\n  }\n}\n\n/*\nMapContainer.defaultProps = {\n  names: {},\n  locations: [],\n  addresses: [],\n  ratings: [],\n\n  activeMarker: {},\n  selectedPlace: {}\n};\n*/\n//Higher Order Component that provides wrapper around Google APIs\n//Can be configured by passing a function that will be called with the wrapped component's props\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBFUHG2hhGRTX-FTfz3nwMMNPXKHvqGxZ8\"\n})(MapContainer);\n","import React, { useState } from \"react\";\n\nimport \"../App.css\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport StarRatingComponent from \"react-star-rating-component\";\nimport axios from \"axios\";\nconst ReviewModal = (props) => {\n  const { buttonLabel, className } = props;\n  const names = props.names;\n  const ratings = props.ratings;\n  const placeID = props.placeID;\n  // these constants are used to for the ratings after db call\n  const [seating, setSeating] = useState(0);\n  const [comfort, setComfort] = useState(0);\n  const [speed, setSpeed] = useState(0);\n  const [noise, setNoise] = useState(0);\n  const [outlet, setOutlet] = useState(0);\n\n  const [hours, setHours] = useState(false);\n  const [phone, setPhone] = useState(\"\");\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const getString = \"/api/getDataAverage/\" + placeID;\n  const getDataFromDb = () => {\n    axios\n      .get(getString)\n      .then((res) => {\n        setSeating(res.data.data[0].averageSeatRating);\n        setComfort(res.data.data[0].averageComfortRating);\n        setSpeed(res.data.data[0].averageInternetRating);\n        setNoise(res.data.data[0].averageNoiseRating);\n        setOutlet(res.data.data[0].averageOutletRating);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getPlaceInfo = () => {\n    axios\n      .get(\n        `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/${placeID}`,\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`,\n          },\n        }\n      )\n      .then((res) => {\n        setHours(res.data.hours[0].is_open_now);\n        setPhone(res.data.display_phone);\n      })\n      .catch((err) => {\n        console.log(err.res);\n      });\n  };\n\n  return (\n    <div>\n      <Button\n        color=\"danger\"\n        onClick={() => {\n          getDataFromDb();\n          getPlaceInfo();\n          toggle();\n        }}\n      >\n        {buttonLabel} Read Reviews\n      </Button>\n      <Modal isOpen={modal} fade={false} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>{names}</ModalHeader>\n        <ModalBody>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n          <div> Seating</div>\n          <StarRatingComponent\n            name={\"Seating\"}\n            editing={false}\n            starCount={5}\n            value={seating}\n          />\n          <div> Seat Comfort</div>\n          <StarRatingComponent\n            name={\"Comfort\"}\n            editing={false}\n            starCount={5}\n            value={comfort}\n          />\n          <div> Internet Rating</div>\n          <StarRatingComponent\n            name={\"Internet Speed\"}\n            editing={false}\n            starCount={5}\n            value={speed}\n          />\n          <div> Noise Level </div>\n          <StarRatingComponent\n            name={\"Noise\"}\n            editing={false}\n            starCount={5}\n            value={noise}\n          />\n          <div> Outlet Availability </div>\n          <StarRatingComponent\n            name={\"Outlet Availability\"}\n            editing={false}\n            starCount={5}\n            value={outlet}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ReviewModal;\n","// within the filter there will be a drop down that fills a form\n// After a user presses submit the entries will go back to viewlist then app.js\n// have it exclude/include based on the entries and stil continue\n// to have unrated ones.\n\nimport React, { useState } from \"react\";\nimport { Collapse, Button, CardBody, Card } from \"reactstrap\";\nimport StarRatingComponent from \"react-star-rating-component\";\nimport \"../App.css\";\nconst FilterList = props => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [seating, setSeating] = useState(0);\n  const [comfort, setComfort] = useState(0);\n  const [speed, setSpeed] = useState(0);\n  const [noise, setNoise] = useState(0);\n  const [outlet, setOutlet] = useState(0);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const onStarClickSeating = (nextValue, prevValue, name) => {\n    setSeating(nextValue);\n  };\n  const onStarClickComfort = (nextValue, prevValue, name) => {\n    setComfort(nextValue);\n  };\n  const onStarClickSpeed = (nextValue, prevValue, name) => {\n    setSpeed(nextValue);\n  };\n  const onStarClickNoise = (nextValue, prevValue, name) => {\n    setNoise(nextValue);\n  };\n  const onStarClickOutlet = (nextValue, prevValue, name) => {\n    setOutlet(nextValue);\n  };\n\n  return (\n    <div>\n      <Button\n        color=\"primary\"\n        onClick={toggle}\n        id=\"filterButton\"\n        style={{ marginBottom: \"1rem\", marginTop: \"1rem\", marginLeft: \"3rem\" }}\n      >\n        Filter\n      </Button>\n      <Collapse isOpen={isOpen}>\n        <Card>\n          <div className={\"filterList\"}>\n            <CardBody>\n              <div> Select minimum rating for each category </div>\n              <br />\n              <div className={\"filterListInside\"}>\n                <div className={\"filterText\"}>Seating: </div>\n                <div className={\"filterStar\"}>\n                  <StarRatingComponent\n                    name={\"Seating\"}\n                    editing={true}\n                    starCount={5}\n                    value={seating}\n                    onStarClick={onStarClickSeating}\n                  />\n                </div>\n              </div>\n\n              <div className={\"filterListInside\"}>\n                <div className={\"filterText\"}>Seat Comfort:</div>\n                <div className={\"filterStar\"}>\n                  <StarRatingComponent\n                    name={\"SeatComfort\"}\n                    editing={true}\n                    starCount={5}\n                    value={comfort}\n                    onStarClick={onStarClickComfort}\n                  />\n                </div>\n              </div>\n\n              <div className={\"filterListInside\"}>\n                <div className={\"filterText\"}>Internet Speed: </div>\n                <div className={\"filterStar\"}>\n                  <StarRatingComponent\n                    name={\"internetSpeed\"}\n                    editing={true}\n                    starCount={5}\n                    value={speed}\n                    onStarClick={onStarClickSpeed}\n                  />\n                </div>\n              </div>\n\n              <div className={\"filterListInside\"}>\n                <div className={\"filterText\"}>Noise Level:</div>\n                <div className={\"filterStar\"}>\n                  <StarRatingComponent\n                    name={\"Noise\"}\n                    editing={true}\n                    starCount={5}\n                    value={noise}\n                    onStarClick={onStarClickNoise}\n                  />\n                </div>\n              </div>\n\n              <div className={\"filterListInside\"}>\n                <div className={\"filterText\"}>Outlet Availability:</div>\n                <div className={\"filterStar\"}>\n                  <StarRatingComponent\n                    name={\"Outlet\"}\n                    editing={true}\n                    starCount={5}\n                    value={outlet}\n                    onStarClick={onStarClickOutlet}\n                  />\n                </div>\n              </div>\n              <Button\n                onClick={() => {\n                  props.onFilter(seating, comfort, speed, noise, outlet);\n                  toggle();\n                }}\n              >\n                Submit\n              </Button>\n            </CardBody>\n          </div>\n        </Card>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default FilterList;\n","import React, { useState } from \"react\";\n\nimport \"../App.css\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport StarRatingComponent from \"react-star-rating-component\";\n\nconst WriteReviewModal = props => {\n  const { buttonLabel, className } = props;\n  const names = props.names;\n  const rating = props.rating;\n  const placeID = props.placeID;\n  const [seating, setSeating] = useState(0);\n  const [comfort, setComfort] = useState(0);\n  const [speed, setSpeed] = useState(0);\n  const [noise, setNoise] = useState(0);\n  const [outlet, setOutlet] = useState(0);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const onStarClickSeating = (nextValue, prevValue, name) => {\n    setSeating(nextValue);\n  };\n  const onStarClickComfort = (nextValue, prevValue, name) => {\n    setComfort(nextValue);\n  };\n  const onStarClickSpeed = (nextValue, prevValue, name) => {\n    setSpeed(nextValue);\n  };\n  const onStarClickNoise = (nextValue, prevValue, name) => {\n    setNoise(nextValue);\n  };\n  const onStarClickOutlet = (nextValue, prevValue, name) => {\n    setOutlet(nextValue);\n  };\n\n  return (\n    <div>\n      <Button color=\"danger\" onClick={toggle}>\n        {buttonLabel} Write Review\n      </Button>\n      <Modal isOpen={modal} fade={false} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>{names}</ModalHeader>\n        <ModalBody>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n          <div>Seating</div>\n          <StarRatingComponent\n            name={names}\n            editing={true}\n            starCount={5}\n            value={seating}\n            onStarClick={onStarClickSeating}\n          />\n          <div>Seat Comfort</div>\n          <StarRatingComponent\n            name={names}\n            editing={true}\n            starCount={5}\n            value={comfort}\n            onStarClick={onStarClickComfort}\n          />\n          <div>Internet Speed</div>\n          <StarRatingComponent\n            name={names}\n            editing={true}\n            starCount={5}\n            value={speed}\n            onStarClick={onStarClickSpeed}\n          />\n          <div>Nosie Level</div>\n          <StarRatingComponent\n            name={names}\n            editing={true}\n            starCount={5}\n            value={noise}\n            onStarClick={onStarClickNoise}\n          />\n          <div>Outlet Availability</div>\n          <StarRatingComponent\n            name={names}\n            editing={true}\n            starCount={5}\n            value={outlet}\n            onStarClick={onStarClickOutlet}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              props.putData(placeID, seating, comfort, speed, noise, outlet);\n              toggle();\n            }}\n          >\n            Submit\n          </Button>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nexport default WriteReviewModal;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { render } from \"@testing-library/react\";\nimport \"../App.css\";\nimport ReviewModal from \"./ReviewModal\";\nimport FilterList from \"./FilterList\";\nimport WriteReviewModal from \"./WriteReviewModal\";\nimport axios from \"axios\";\n\nexport class ViewList extends Component {\n  constructor(props) {\n    super(props);\n    this.filterPlaces = this.filterPlaces.bind(this);\n    this.state = {\n      elements: [],\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.names !== prevProps.names) {\n      this.createList();\n    }\n  }\n\n  componentDidMount() {\n    this.createList();\n  }\n\n  putDataToDB = (\n    placeID,\n    rateSeating,\n    rateComfort,\n    rateIspeed,\n    rateNoise,\n    rateOutlet\n  ) => {\n    axios.post(\"/api/putData\", {\n      placeID: placeID,\n      seatRating: rateSeating,\n      comfortRating: rateComfort,\n      noiseRating: rateNoise,\n      internetRating: rateIspeed,\n      outletRating: rateOutlet,\n    });\n  };\n\n  createList() {\n    const names = this.props.names;\n    const addresses = this.props.addresses;\n    const ratings = this.props.ratings;\n    const placeID = this.props.placeID;\n    const newArray = [];\n\n    for (var i = 0; i < names.length; i++) {\n      newArray.push(\n        <li>\n          <div>{names[i]}</div>\n\n          <div>{addresses[i]}</div>\n          <div> Yelp rating: {ratings[i]}/5</div>\n          <ReviewModal\n            names={names[i]}\n            ratings={ratings[i]}\n            showReviews={this.showReviews}\n            placeID={placeID[i]}\n          />\n          <br />\n          <WriteReviewModal\n            names={names[i]}\n            putData={this.putDataToDB}\n            placeID={placeID[i]}\n          />\n          <br />\n        </li>\n      );\n    }\n    this.setState({ elements: newArray });\n  }\n\n  filterPlaces(seating, comfort, speed, noise, outlet) {\n    let filterArray = [seating, comfort, speed, noise, outlet];\n    this.props.onFilter(filterArray);\n  }\n\n  render() {\n    return (\n      <div className={this.props.className} id={this.props.id}>\n        <FilterList onFilter={this.filterPlaces} />\n        <ol>{this.state.elements}</ol>\n      </div>\n    );\n  }\n}\nexport default ViewList;\n","import React, { Component } from \"react\";\n\nimport MapContainer from \"./components/MapContainer\";\nimport axios from \"axios\";\nimport ViewList from \"./components/ViewList\";\n\nimport \"./App.css\";\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks,\n} from \"body-scroll-lock\";\nimport { filter } from \"async\";\n\nexport class App extends React.Component {\n  targetElement = null;\n  //modal variabales\n\n  constructor(props) {\n    //state from map needs to live up here\n    super(props);\n\n    this.state = {\n      showingInfoWindow: false,\n      show: false,\n      activeMarker: {},\n      selectedPlace: {},\n      addresses: [],\n      locations: [],\n      names: [],\n      placeID: [],\n      hours: [],\n      ratings: [],\n      currentLocation: {\n        lat: \"\",\n        lng: \"\",\n      },\n    };\n\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.handleOnMapClicked = this.handleOnMapClicked.bind(this);\n    this.handleCenterMoved = this.handleCenterMoved.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.filterPlaces = this.filterPlaces.bind(this);\n    this.removePlaces = this.removePlaces.bind(this);\n    this.connectToServer = this.connectToServer.bind(this);\n  }\n\n  componentDidMount() {\n    this.targetElement = document.querySelector(\"#listView\");\n    disableBodyScroll(this.targetElement);\n    this.connectToServer();\n  }\n\n  connectToServer() {\n    fetch(\"/\");\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  };\n\n  handleOnMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  handleCenterMoved(mapProps, map) {\n    this.setState(\n      {\n        currentLocation: {\n          lat: map.center.lat(),\n          lng: map.center.lng(),\n        },\n      },\n      () => {\n        this.getMapInfo();\n      }\n    );\n  }\n\n  handleLocationChange(lat, lng) {\n    this.setState(\n      {\n        currentLocation: {\n          lat: lat,\n          lng: lng,\n        },\n      },\n      () => {\n        this.getMapInfo();\n      }\n    );\n  }\n\n  handleFilters = async (filterArray) => {\n    let paramArray = await this.getMapInfo(filterArray);\n    let filteredArray = await this.filterPlaces(filterArray, paramArray);\n    let removedArray = await this.removePlaces(filteredArray, paramArray);\n    console.log(removedArray);\n    let returned = await this.filterFinal(removedArray);\n    console.log(returned);\n  };\n\n  getMapInfo = (filterArray) => {\n    return new Promise((resolve, reject) => {\n      var paramArray = [];\n      var locationArr = [];\n      var namesArr = [];\n      var ratingsArr = [];\n      var addressesArr = [];\n      var placeIDArr = [];\n      axios\n        .get(\n          `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?`,\n          {\n            headers: {\n              Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`,\n            },\n            params: {\n              categories: \"coffee, libraries\",\n              latitude: this.state.currentLocation.lat,\n              longitude: this.state.currentLocation.lng,\n              limit: 20,\n            },\n          }\n        )\n        // set state for locations, names\n        .then((res) => {\n          for (var key in res.data.businesses) {\n            var addressesBase = res.data.businesses[key].location;\n\n            locationArr.push(res.data.businesses[key].coordinates);\n            placeIDArr.push(res.data.businesses[key].id);\n            namesArr.push(res.data.businesses[key].name);\n            ratingsArr.push(res.data.businesses[key].rating);\n            addressesArr.push(\n              \"\" +\n                addressesBase.address1 +\n                \" \" +\n                addressesBase.city +\n                \", \" +\n                addressesBase.state +\n                \" \" +\n                addressesBase.zip_code\n            );\n          }\n          if (filterArray === undefined) {\n            this.setState({\n              placeID: placeIDArr,\n              locations: locationArr,\n              names: namesArr,\n              ratings: ratingsArr,\n              addresses: addressesArr,\n            });\n          }\n\n          paramArray.push(placeIDArr);\n          paramArray.push(locationArr);\n          paramArray.push(namesArr);\n          paramArray.push(ratingsArr);\n          paramArray.push(addressesArr);\n\n          if (filterArray !== undefined) {\n            resolve(paramArray);\n          }\n        });\n    }).catch((err) => {\n      console.log(\"Yelp API call error\");\n    });\n  };\n\n  filterFinal = (removedArray) => {\n    return new Promise((resolve, reject) => {\n      let placeIDArr = removedArray[0];\n      let locationsArr = removedArray[1];\n      let namesArr = removedArray[2];\n      let ratingsArr = removedArray[3];\n      let addressesArr = removedArray[4];\n\n      this.setState({\n        placeID: placeIDArr,\n        locations: locationsArr,\n        names: namesArr,\n        ratings: ratingsArr,\n        addresses: addressesArr,\n      });\n      resolve(\"great success\");\n    });\n  };\n  filterPlaces = (filterArray, paramArray) => {\n    // have viewList send the filters in an array\n    // get request to the database and put the list of placeIDs in a list that excludes those places\n    // update the state\n\n    return new Promise((resolve, reject) => {\n      var placeIDArr = paramArray[0];\n      var resolveLimit = placeIDArr.length - 1;\n      var removeArray = [];\n      for (let i = 0; i < placeIDArr.length; i++) {\n        const getString = \"/api/getDataAverage/\" + placeIDArr[i];\n        axios\n          .get(getString)\n          .then((res) => {\n            let resArray = [\n              res.data.data[0].averageSeatRating,\n              res.data.data[0].averageComfortRating,\n              res.data.data[0].averageInternetRating,\n              res.data.data[0].averageNoiseRating,\n              res.data.data[0].averageOutletRating,\n            ];\n            // push the indexes\n            for (let j = 0; j < resArray.length; j++) {\n              if (resArray[j] < filterArray[j]) {\n                removeArray.push(i);\n                break;\n              }\n            }\n          })\n\n          .then(() => {\n            resolve(removeArray);\n          })\n\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    });\n  };\n\n  // remove change state array and rerender by calling setState\n  removePlaces = (removeArray, paramArray) => {\n    return new Promise((resolve, reject) => {\n      let placeIDCopy = paramArray[0];\n      let locationArrayCopy = paramArray[1];\n      let namesCopy = paramArray[2];\n      let ratingsCopy = paramArray[3];\n      let addressesCopy = paramArray[4];\n\n      let i = removeArray.length;\n      console.log(removeArray);\n\n      while (i--) {\n        console.log(\"here\");\n        locationArrayCopy.splice(removeArray[i], 1);\n        placeIDCopy.splice(removeArray[i], 1);\n        namesCopy.splice(removeArray[i], 1);\n        ratingsCopy.splice(removeArray[i], 1);\n        addressesCopy.splice(removeArray[i], 1);\n      }\n      let returnArray = [\n        placeIDCopy,\n        locationArrayCopy,\n        namesCopy,\n        ratingsCopy,\n        addressesCopy,\n      ];\n      //console.log(returnArray);\n\n      resolve(returnArray);\n    });\n  };\n\n  // have the filters as states. And pass thsoe states off to ViewList to create\n  // a call to the database\n  render() {\n    const names = this.state.names;\n    const locations = this.state.locations;\n    const addresses = this.state.addresses;\n    const ratings = this.state.ratings;\n    const activeMarker = this.state.activeMarker;\n    const showingInfoWindow = this.state.showingInfoWindow;\n    const selectedPlace = this.state.selectedPlace;\n    const placeID = this.state.placeID;\n    return (\n      <div className={\"container\"}>\n        <div id=\"title\"> Study Spots</div>\n        <div className={\"mapListContainer\"}>\n          <ViewList\n            className={\"ViewList\"}\n            id={\"listView\"}\n            names={names}\n            locations={locations}\n            addresses={addresses}\n            ratings={ratings}\n            placeID={placeID}\n            onFilter={this.handleFilters}\n          />\n\n          <MapContainer\n            className={\"mapContainer\"}\n            names={names}\n            locations={locations}\n            addresses={addresses}\n            ratings={ratings}\n            activeMarker={activeMarker}\n            showingInfoWindow={showingInfoWindow}\n            selectedPlace={selectedPlace}\n            onMapClicked={this.handleOnMapClicked}\n            onMarkerClick={this.onMarkerClick}\n            centerMoved={this.handleCenterMoved}\n            handleLocationChange={this.handleLocationChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nmodule.exports =\n  (typeof window.self === \"object\" &&\n    window.self.self === window.self &&\n    window.self) ||\n  (typeof global === \"object\" && global.global === global && global) ||\n  this;\n"],"sourceRoot":""}