{"ast":null,"code":"var _jsxFileName = \"/Users/colinkawai/mapreacdt/src/components/WriteReviewModal.js\";\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from \"reactstrap\";\nimport StarRatingComponent from \"react-star-rating-component\";\n\nconst WriteReviewModal = props => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n  const [unmountOnClose, setUnmountOnClose] = useState(true);\n\n  const toggle = () => setModal(!modal);\n\n  const changeUnmountOnClose = e => {\n    let value = e.target.value;\n    setUnmountOnClose(JSON.parse(value));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form, {\n    inline: true,\n    onSubmit: e => e.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"unmountOnClose\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"UnmountOnClose value\"), \" \", React.createElement(Input, {\n    type: \"select\",\n    name: \"unmountOnClose\",\n    id: \"unmountOnClose\",\n    onChange: changeUnmountOnClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"true\"), React.createElement(\"option\", {\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"false\"))), \" \", React.createElement(Button, {\n    color: \"danger\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, buttonLabel)), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    unmountOnClose: unmountOnClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Modal title\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"textarea\",\n    placeholder: \"Write something (data should remain in modal if unmountOnClose is set to false)\",\n    rows: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Do Something\"), \" \", React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default WriteReviewModal;","map":{"version":3,"sources":["/Users/colinkawai/mapreacdt/src/components/WriteReviewModal.js"],"names":["React","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","Form","FormGroup","StarRatingComponent","WriteReviewModal","props","buttonLabel","className","modal","setModal","unmountOnClose","setUnmountOnClose","toggle","changeUnmountOnClose","e","value","target","JSON","parse","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n  Form,\n  FormGroup\n} from \"reactstrap\";\nimport StarRatingComponent from \"react-star-rating-component\";\n\nconst WriteReviewModal = props => {\n  const { buttonLabel, className } = props;\n\n  const [modal, setModal] = useState(false);\n  const [unmountOnClose, setUnmountOnClose] = useState(true);\n\n  const toggle = () => setModal(!modal);\n  const changeUnmountOnClose = e => {\n    let value = e.target.value;\n    setUnmountOnClose(JSON.parse(value));\n  };\n\n  return (\n    <div>\n      <Form inline onSubmit={e => e.preventDefault()}>\n        <FormGroup>\n          <Label for=\"unmountOnClose\">UnmountOnClose value</Label>{\" \"}\n          <Input\n            type=\"select\"\n            name=\"unmountOnClose\"\n            id=\"unmountOnClose\"\n            onChange={changeUnmountOnClose}\n          >\n            <option value=\"true\">true</option>\n            <option value=\"false\">false</option>\n          </Input>\n        </FormGroup>{\" \"}\n        <Button color=\"danger\" onClick={toggle}>\n          {buttonLabel}\n        </Button>\n      </Form>\n      <Modal\n        isOpen={modal}\n        toggle={toggle}\n        className={className}\n        unmountOnClose={unmountOnClose}\n      >\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n          <Input\n            type=\"textarea\"\n            placeholder=\"Write something (data should remain in modal if unmountOnClose is set to false)\"\n            rows={5}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggle}>\n            Do Something\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nexport default WriteReviewModal;\n"]},"metadata":{},"sourceType":"module"}